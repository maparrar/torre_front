{"version":3,"sources":["components/Header/Header.js","components/Workspace/Workspace.js","containers/Viewer/Viewer.js","App.js","reportWebVitals.js","store/actions/actionTypes.js","store/reducers/reducer.js","store/configure.js","index.js"],"names":["Header","Workspace","props","children","Viewer","useEffect","axios","get","proxy","then","response","console","log","data","post","currency","page","periodicity","lang","size","aggregate","offset","opportunities","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_TOKEN","initialState","token","reducer","state","action","type","actionTypes","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"uMAQeA,G,YANA,kBACb,iCACE,mDCEWC,EAJG,SAAAC,GAAK,OACrB,mCAAGA,EAAMC,Y,gBCoCIC,EAnCA,WA8Bb,OA5BAC,qBAAU,WAGRC,IAAMC,IAAKC,wEAAaC,MAAK,SAACC,GAE5BC,QAAQC,IAAIF,EAASG,WAEvB,IAEDR,qBAAU,WAWRC,IAAMQ,KAAM,gDATC,CACXC,SAAU,MACVC,KAAK,EACLC,YAAY,SACZC,KAAM,KACNC,KAAM,GACNC,WAAW,EACXC,OAAQ,IAEyDZ,MAAK,SAACC,GACvE,IAAMY,EAAgBZ,EAASG,KAC/BF,QAAQC,IAAIU,QAGd,IAID,+CClBWC,EAXH,WACV,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,UACE,cAAC,EAAD,UCCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,+CCPDO,EAAY,YCEnBC,EAAe,CACnBC,MAAO,MAiBMC,EAdC,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAChD,OAAQA,EAAOC,MACb,KAAKC,EACH,OAAO,2BACFH,GADL,IAEEF,MAAOG,EAAOH,QAElB,QACE,OAAO,eACFE,KCTLI,EAAgB,CACpBC,IAAK,eACLC,aAGIC,EAAmBC,YAAeJ,EAAeK,GAE1CC,EAAQC,YACnBJ,EACAK,OAAOC,8BAAgCD,OAAOC,gCAElCC,EAAYC,YAAaL,G,QCRvCM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaS,QAAS,KAAML,UAAWA,EAAvC,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,SAM1BjC,M","file":"static/js/main.3423cd1d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <header>\n    <h2>Skills Viewer</h2>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst Workspace = props => (\n  <>{props.children}</>\n);\n\nexport default Workspace;\n","import React, {useEffect} from 'react';\n\nimport axios from 'axios';\n\nconst Viewer = () => {\n\n  useEffect(() => {\n    const proxy = \"https://corsshield.herokuapp.com/\";\n    const url = \"https://torre.bio/api/bios/maparrar\";\n    axios.get( proxy + url).then((response) => {\n      // opportunities = response.data;\n      console.log(response.data);\n    });\n  },[]);\n\n   useEffect(() => {\n\n     const data = {\n       currency: \"USD\",\n       page:0,\n       periodicity:\"hourly\",\n       lang: \"es\",\n       size: 20,\n       aggregate: false,\n       offset: 0\n     }\n     axios.post( 'https://search.torre.co/opportunities/_search', data).then((response) => {\n       const opportunities = response.data;\n       console.log(opportunities);\n\n     });\n   },[]);\n\n\n  return (\n    <>Viewer</>\n  );\n};\n\nexport default Viewer;\n","import './App.css';\n\nimport Header from \"./components/Header/Header\";\nimport Workspace from \"./components/Workspace/Workspace\";\nimport Viewer from \"./containers/Viewer/Viewer\";\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <Workspace>\n        <Viewer />\n      </Workspace>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SET_TOKEN = 'SET_TOKEN';\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  token: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_TOKEN:\n      return {\n        ...state,\n        token: action.token\n      }\n    default:\n      return {\n        ...state\n      }\n  }\n};\n\nexport default reducer;\n","import { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport rootReducer from './reducers/reducer';\n\nconst persistConfig = {\n  key: 'skillsviewer',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n  persistedReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nexport  const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './store/configure';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}